#+Title: Optimization
#+Options: ^:nil

* Virtual Machine Setup

1. We will create a Qemu virtual machine and install the Debian 5.0.9
   specifically =debian-5010-i386-netinst.iso= from
   http://cdimage.debian.org/mirror/cdimage/archive/5.0.9/i386/iso-cd/.

   #+begin_src sh
     # create the disk
     qemu-img create -f qcow2 tune.qcow 4G
     # install the operating system
     qemu-system-x86_64 tune.qcow -cdrom debian-5010-i386-netinst.iso -boot d
   #+end_src

2. Walk through the instillation dialog, we'll set the following
   values.
   | hostname            | tune          |
   | version             | stable        |
   | root password       | password      |
   | new user full name  | Francis Bacon |
   | new user login name | bacon         |
   | new user password   | password      |

   As Debian Lenny is no longer supported, You will not be able to
   find a working mirror.  When you are confronted with the warning
   that no working mirror has been found, select the =<Go Back>=
   option, and then continue installing a minimal system with no
   working mirror.  Finish the instillation and Reboot.

3. After booting into the working system, log in as root and add old
   Lenny archive URLs to =/etc/apt/sources.list=.
   #+begin_src sh
     cp /etc/apt/sources.list /etc/apt/sources.list.backup
     echo "deb http://archive.debian.org/debian/ lenny main" >> /etc/apt/sources.list
     echo "deb http://archive.debian.org/debian-security lenny/updates main" >> /etc/apt/sources.list
     apt-get update
   #+end_src

4. Now install the Graphite dependencies,
   #+begin_src sh
     apt-get install build-essential
     apt-get install libboost1.35-dev libboost-filesystem1.35-dev libboost-system1.35-dev
     apt-get install git-core
     # and an ssh server so we can ssh into this VM
     apt-get install openssh-server
   #+end_src
   give the =bacon= user =sudo= permissions,
   #+begin_src sh
     apt-get install sudo
     echo "bacon   ALL=(ALL) ALL" >> /etc/sudoers
   #+end_src
   and shutdown the machine.
   #+begin_src sh
     shutdown -h 0
   #+end_src

5. Start up the virtual machine with network access so we can connect
   with ssh -- allowing copy-paste from the local machine, use of a
   normal terminal, and other niceties.
   #+begin_src sh
     qemu-kvm -hda tune.qcow -nographic -net nic -net user,hostfwd=tcp:127.0.0.1:2222-:22
   #+end_src

6. Log into =tune= as =bacon=.
   #+begin_src sh
     ssh -p 2222 bacon@localhost
   #+end_src
   and install Graphite following these instructions from
   https://github.com/mit-carbon/Graphite/wiki/Getting-Started,
   #+begin_src sh
     wget http://www.cs.virginia.edu/kim/publicity/pin/kits/pin-2.6-27887-gcc.4.0.0-ia32_intel64-linux.tar.gz
     tar xzf pin-2.6-27887-gcc.4.0.0-ia32_intel64-linux.tar.gz
     cd pin
     git clone git://github.com/mit-carbon/Graphite.git graphite
   #+end_src
   and update the =TARGET_ARCH= and =PIN_HOME= variables in =~/graphite/Makefile.config=.
   #+begin_src sh
     cat <<EOF > ~/graphite/Makefile.config
     # Use ia32 for 32-bit, x86_64 for 64-bit
     TARGET_ARCH = x86_64 # <-(may be different depending on your host?)
     
     # change only if a different (more up-to-date) version of Boost is installed
     BOOST_VERSION = 1_35
     
     # where Pin is uzipped to
     PIN_HOME = /home/bacon/pin
     EOF
   #+end_src
