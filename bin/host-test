#!/bin/bash
#
# Copyright (C) 2012  Eric Schulte
#
# Usage: host-test program variant
#
# Commentary:
#   does not follow the normal test script format, rather it;
#    1. takes the path to a .s asm file
#    2. copies that file to a VM
#    3. runs the resulting program in Graphite in the VM
#    4. returns the full set of Graphite debug info as lisp
#
. $(dirname $0)/common

pick_remote(){ echo ${REMOTES[$RANDOM % ${#REMOTES[@]}]}; }

if [ -z "$2" ];then help; exit 1;fi
program=$1
var=$2
guest_test="/home/bacon/bin/guest-test"
cmd="$guest_test $program /tmp/$(basename $var)"
output_path="graphite/output_files/sim.out"

## run remotely and collect output and return value
output="busy"
err=""
while [ "$output" = "busy" ]; do
    remote=$(pick_remote)
    scp -P $remote $var bacon@localhost:/tmp/ >/dev/null 2>/dev/null
    output=$(ssh -t -p $remote bacon@localhost "$cmd" 2>/dev/null)
    err=$?
    if [ "$output" = "busy" ];then sleep 1; fi
done

# post process
sed_cmd=$(cat <<EOF
s/\[spawn.py\] //;
s/://;
s/start time/start/;
s/stop time/stop/;
s/shutdown time/shutdown/;
s/\([a-z]\) \([a-z]\)/\1-\2/g;
s/|//g;
s/^ \+//;
s/([^)]\+)//g;
s/tile /tile-/g;
s/^(parsec/parsec/;
s/	/ /g;
s/ \+/ /g;
EOF
)
echo "$output"|sed '/Starting process/d;/Simulation timers/d' \
    |tr [A-Z] [a-z] \
    |sed "$sed_cmd"
exit $err
