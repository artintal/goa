#!/bin/bash
#
# Usage: plot FILE1 FILE2 [OPTIONS...]
#  plot stats files
#
# Options:
#  -r,--raw -------- print raw joined data, don't plot
#  -d,--dry-run ---- print the command, don't plot
#  -k,--keep ------- keep the temporary files
#  -l,--lines ------ plot with lines
#
. $(dirname $0)/common

## Parse Options
if [ $# -lt 1 ];then help; fi
FILE1="$1"; shift;
FILE2="$1"; shift;
JOINED=$(mktemp)
LINES=""
DRY=""
KEEP=""

eval set -- $(getopt -o ldkr -l lines,dry-run,keep,raw -- "$@" || help;)
while [ $# -gt 0 ];do
    case $1 in
        -l|--lines) LINES="yes";;
        -d|--dry-run) DRY="yes";;
        -k|--keep)   KEEP="yes";;
        -r|--raw)     RAW="yes";;
        (--) shift; break;;
        (-*) error "unrecognized option $1";;
        (*)  break;;
    esac
    shift
done

## cleanup
declare -a TMPS
function exit_hook () { if [ -z $KEEP ];then rm -f $JOINED; fi; }
trap exit_hook EXIT

# Print the fitness and evals in a format that looks sorted to `join'.
fitness(){ cat $1/stats.txt|awk '{printf "%06d\t%s\n", $1, $2}'; }

plot(){
    if [ ! $RAW ];then
        feedgnuplot $PLOT_OPTS
    else
        cat -
    fi; }

# combine the files
if [ -z $DRY ];then
    $JOIN <(fitness $FILE1) <(fitness $FILE2) -e "NaN"|grep -v e > $JOINED
else
    echo "$JOIN <(fitness $FILE1) <(fitness $FILE2) -e 'NaN'|grep -v e > $JOINED"
fi

GNUPLOT_CMD="set datafile missing 'NaN';"
GNUPLOT_CMD+="plot '$JOINED' u 1:2 title '$FILE1', '$both' u 1:3 title '$FILE2'"

# pass to gnuplot
if [ -z $DRY ];then
    gnuplot -p -e "$GNUPLOT_CMD"
else
    echo "gnuplot -p -e \"$GNUPLOT_CMD\""
fi
