#!/bin/bash
#
# Usage: plot [OPTIONS...] FILE1 FILE2
#  plot stats files
#
# Options:
#  -r,--raw -------- print raw joined data, don't plot
#  -d,--dry-run ---- print the command, don't plot
#  -k,--keep ------- keep the temporary files
#  -l,--lines ------ plot with lines
#
. $(dirname $0)/common

## Parse Options
if [ $# -lt 1 ];then help; fi
JOIN=join # enhanced `join' utility from https://github.com/eschulte/cl-join
JOINED=$(mktemp)
LINES=""
DRY=""
KEEP=""
RAW=""

eval set -- $(getopt -o ldkr -l lines,dry-run,keep,raw -- "$@" || help;)
while [ $# -gt 0 ];do
    case $1 in
        -l|--lines) LINES="yes";;
        -d|--dry-run) DRY="yes";;
        -k|--keep)   KEEP="yes";;
        -r|--raw)     RAW="yes";;
        (--) shift; break;;
        (-*) error "unrecognized option $1";;
        (*)  break;;
    esac
    shift
done

## cleanup
declare -a TMPS
function exit_hook () { if [ -z $KEEP ];then rm -f $JOINED; fi; }
trap exit_hook EXIT

if [ -z $DRY ];then
    $JOIN -v 1 -n -e "NaN" $@|grep -v e > $JOINED
else
    echo "$JOIN -v 1 -n -e "NaN" $@|grep -v e > $JOINED"
fi

GNUPLOT_CMD="set datafile missing 'NaN';plot "
FIRST="YES"
COUNTER=2
for file in $@;do
    if [ -z $FIRST ];then
        GNUPLOT_CMD+=", "
    else
        FIRST=""
    fi
    GNUPLOT_CMD+="'$JOINED' u 1:$COUNTER title '$file'"
    COUNTER=$(($COUNTER + 1))
done

# pass to gnuplot
if [ -z $DRY ];then
    if [ ! $RAW ];then
        gnuplot -p -e "$GNUPLOT_CMD"
    else
        cat $JOINED
    fi
else
    echo "gnuplot -p -e \"$GNUPLOT_CMD\""
fi
